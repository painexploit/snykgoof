name: Example workflow for Node using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk.sarif
      - name: Output SARIF for debugging
        run: |
          echo "SARIF results for debugging:"
          jq '.runs[0].results[0]' snyk.sarif
          
      - name: Calculate and save vulnerability details
        run: |
          echo "Parsing Snyk SARIF output..."
          total_vulnerabilities=$(jq '[.runs[].results[]] | length' snyk.sarif)
          echo "RESULTS_LENGTH=$total_vulnerabilities" >> $GITHUB_ENV
          high_vulnerabilities=$(jq '[.runs[].results[] | select(.level=="error")] | length' snyk.sarif)
          medium_vulnerabilities=$(jq '[.runs[].results[] | select(.level=="warning")] | length' snyk.sarif)
          low_vulnerabilities=$(jq '[.runs[].results[] | select(.level=="note")] | length' snyk.sarif)

          high_vulnerability_details=$(jq -r '[.runs[].results[] | select(.level=="error") | {name: .message.text, path: .locations[].physicalLocation.artifactLocation.uri, line: .locations[].physicalLocation.region.startLine}] | unique | .[] | "Name: \(.name)\nPath: \(.path), line \(.line)"' snyk.sarif | paste -sd "\n" -)
          
          medium_vulnerability_details=$(jq -r '[.runs[].results[] | select(.level=="warning") | {name: .message.text, path: .locations[].physicalLocation.artifactLocation.uri, line: .locations[].physicalLocation.region.startLine}] | unique | .[] | "Name: \(.name)\nPath: \(.path), line \(.line)"' snyk.sarif | paste -sd "\n" -)

          low_vulnerability_details=$(jq -r '[.runs[].results[] | select(.level=="note") | {name: .message.text, path: .locations[].physicalLocation.artifactLocation.uri, line: .locations[].physicalLocation.region.startLine}] | unique | .[] | "Name: \(.name)\nPath: \(.path), line \(.line)"' snyk.sarif | paste -sd "\n" -)
          
          echo "Sending notification to Slack..."
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "Snyk Vulnerability Report:\n\nTotal Vulnerabilities: '"$total_vulnerabilities"'\n\nHigh: '"$high_vulnerabilities"'\n'"$high_vulnerability_details"'\n\nMedium: '"$medium_vulnerabilities"'\n'"$medium_vulnerability_details"'\n\nLow: '"$low_vulnerabilities"'\n'"$low_vulnerability_details"'"
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Pass or Fail the Job
        run: |
              if ["$RESULTS_LENGTH" !=0 ]; then
                echo "Job Failed"
                exit 1
              else
                echo "Pass"
              fi

