name: Example workflow for Node using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk.sarif
      - name: Total Security Issues
        run: |
              length=$(cat snyk.sarif | jq '.runs[0].results | length')
              echo "RESULTS_LENGTH=$length" >> $GITHUB_ENV
      - name: High
        run: |
              high=$(cat snyk.sarif | jq '.runs[0].results | map(select(.level == "error")) | length')
              echo "RESULTS_HIGH=$high" >> $GITHUB_ENV          
      - name: Medium
        run: |
              medium=$(cat snyk.sarif | jq '.runs[0].results | map(select(.level == "warning")) | length')
              echo "RESULTS_MEDIUM=$medium" >> $GITHUB_ENV
      - name: Low
        run: |
              low=$(cat snyk.sarif | jq '.runs[0].results | map(select(.level == "note")) | length')
              echo "RESULTS_LOW=$low" >> $GITHUB_ENV
      - name: Vulnerability Description
        run: |
              high_vuln=$(jq -r '.runs[0].results | map(select(.properties.severity == "high")) | .[] | "\(.ruleId): \(.message.text) (Path: \(.locations[0].physicalLocation.artifactLocation.uri), Line: \(.locations[0].physicalLocation.region.startLine))"' snyk.sarif)
              high_vulns_formatted=$(echo "$high_vuln" | sed ':a;N;$!ba;s/\n/\\n/g')
              echo "$high_vulns_formatted" 
              medium_vuln=$(jq -r '.runs[0].results | map(select(.level == "warning")) | .[] | "\(.ruleId): \(.message.text)"' snyk.sarif)
              medium_vulns_formatted=$(echo "$medium_vuln" | sed ':a;N;$!ba;s/\n/\\n/g')
              echo "$medium_vulns_formatted"
              low_vuln=$(jq -r '.runs[0].results | map(select(.level == "note")) | .[] | "\(.ruleId): \(.message.text)"' snyk.sarif)
              low_vulns_formatted=$(echo "$low_vuln" | sed ':a;N;$!ba;s/\n/\\n/g')
              echo "$low_vulns_formatted"
      
    #  - name: Extract commit URLs from SARIF file
     #   id: extract_commits
      #  run: |
       #   jq -r '.runs[].results[] | select(.level == "error") | .locations[].physicalLocation.artifactLocation.uri' snyk.sarif > commit_urls.txt
      #- name: Print Commit URLS
       # run: cat commit_urls.txt
      
      - name: Pass or Fail the Job
        run: |
              if ["$RESULTS_LENGTH" !=0 ]; then
                echo "Job Failed"
                exit 1
              else
                echo "Pass"
              fi

      - name: Send notification on Slack using Webhooks
        uses: slackapi/slack-github-action@v1.24.0
        if: always()
        with:
          payload: |
                {
                   "text": "*The Snyk scan result for repo , snykgoof, is : ${{ job.status }}* \n*Number of vulnerabilities : ${{ env.RESULTS_LENGTH }}* \n*High : ${{ env.RESULTS_HIGH }}* \n*Medium : ${{ env.RESULTS_MEDIUM }}* \n*Low : ${{ env.RESULTS_LOW }}* \n*Age : ${{ env.RESULTS_AGE }}* \n*Age_Days : ${{ env.RESULTS_AGE_DAYS }}* \n*High_Vuln: $high_vuln* \n*Detail*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                }
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}
