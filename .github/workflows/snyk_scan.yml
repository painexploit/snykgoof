name: Example workflow for Node using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk.sarif
      - name: Calculate and save vulnerability details
        run: |
          high=$(jq '.runs[0].results | map(select(.properties.severity == "high")) | length' snyk.sarif)
          medium=$(jq '.runs[0].results | map(select(.properties.severity == "medium")) | length' snyk.sarif)
          low=$(jq '.runs[0].results | map(select(.properties.severity == "low")) | length' snyk.sarif)
          total=$((high + medium + low))

          echo "RESULTS_HIGH=$high" >> $GITHUB_ENV
          echo "RESULTS_MEDIUM=$medium" >> $GITHUB_ENV
          echo "RESULTS_LOW=$low" >> $GITHUB_ENV
          echo "RESULTS_TOTAL=$total" >> $GITHUB_ENV

          high_vulns=$(jq -r '.runs[0].results | map(select(.properties.severity == "high")) | .[] | "\(.properties.tags[0]): \(.message.text) (Path: \(.locations[0].physicalLocation.artifactLocation.uri), Line: \(.locations[0].physicalLocation.region.startLine))"' snyk.sarif)
          high_vulns_formatted=$(echo "$high_vulns" | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "HIGH_VULNS=$high_vulns_formatted" >> $GITHUB_ENV

          medium_vulns=$(jq -r '.runs[0].results | map(select(.properties.severity == "medium")) | .[] | "\(.properties.tags[0]): \(.message.text) (Path: \(.locations[0].physicalLocation.artifactLocation.uri), Line: \(.locations[0].physicalLocation.region.startLine))"' snyk.sarif)
          medium_vulns_formatted=$(echo "$medium_vulns" | sed ':a;N;$!ba;s/\n/\\n/g')
          echo "MEDIUM_VULNS=$medium_vulns_formatted" >> $GITHUB_ENV
      
      - name: Pass or Fail the Job
        run: |
              if ["$RESULTS_LENGTH" !=0 ]; then
                echo "Job Failed"
                exit 1
              else
                echo "Pass"
              fi

      - name: Send notification on Slack using Webhooks
        #uses: slackapi/slack-github-action@v1.24.0
        if: always()
        env:
            SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}
            RESULTS_TOTAL: ${{ env.RESULTS_TOTAL }}
            RESULTS_HIGH: ${{ env.RESULTS_HIGH }}
            RESULTS_MEDIUM: ${{ env.RESULTS_MEDIUM }}
            RESULTS_LOW: ${{ env.RESULTS_LOW }}
            HIGH_VULNS: ${{ env.HIGH_VULNS }}
            MEDIUM_VULNS: ${{ env.MEDIUM_VULNS }}
        run: |
            payload=$(jq -n --arg text: "*The Snyk scan result for repo, snykgoof, is: ${{ job.status }}* \n*Number of vulnerabilities: ${{ env.RESULTS_TOTAL }}* \n*High: ${{ env.RESULTS_HIGH }}* \n*Medium: ${{ env.RESULTS_MEDIUM }}* \n*Low: ${{ env.RESULTS_LOW }}* \n*High Vulnerabilities:*\n${{ env.HIGH_VULNS }}\n*Medium Vulnerabilities:*\n${{ env.MEDIUM_VULNS }}\n*Detail*: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" '{text: $text}')
            curl -X POST -H "Content-type: application/json" --data "$payload" $SLACK_WEBHOOK_URL
